/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PagesImport } from './routes/_pages'
import { Route as IndexImport } from './routes/index'
import { Route as PagesOnboardingImport } from './routes/_pages/onboarding'
import { Route as PagestabBarTabBarImport } from './routes/_pages/(tab-bar)/_tab-bar'
import { Route as PagestabBarTabBarGraphImport } from './routes/_pages/(tab-bar)/_tab-bar.graph'
import { Route as PagestabBarTabBarContactsImport } from './routes/_pages/(tab-bar)/_tab-bar.contacts'

// Create Virtual Routes

const PagestabBarImport = createFileRoute('/_pages/(tab-bar)')()

// Create/Update Routes

const PagesRoute = PagesImport.update({
  id: '/_pages',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PagestabBarRoute = PagestabBarImport.update({
  id: '/(tab-bar)',
  getParentRoute: () => PagesRoute,
} as any)

const PagesOnboardingRoute = PagesOnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => PagesRoute,
} as any)

const PagestabBarTabBarRoute = PagestabBarTabBarImport.update({
  id: '/_tab-bar',
  getParentRoute: () => PagestabBarRoute,
} as any)

const PagestabBarTabBarGraphRoute = PagestabBarTabBarGraphImport.update({
  id: '/graph',
  path: '/graph',
  getParentRoute: () => PagestabBarTabBarRoute,
} as any)

const PagestabBarTabBarContactsRoute = PagestabBarTabBarContactsImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => PagestabBarTabBarRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_pages': {
      id: '/_pages'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PagesImport
      parentRoute: typeof rootRoute
    }
    '/_pages/onboarding': {
      id: '/_pages/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof PagesOnboardingImport
      parentRoute: typeof PagesImport
    }
    '/_pages/(tab-bar)': {
      id: '/_pages/(tab-bar)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PagestabBarImport
      parentRoute: typeof PagesImport
    }
    '/_pages/(tab-bar)/_tab-bar': {
      id: '/_pages/(tab-bar)/_tab-bar'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PagestabBarTabBarImport
      parentRoute: typeof PagestabBarRoute
    }
    '/_pages/(tab-bar)/_tab-bar/contacts': {
      id: '/_pages/(tab-bar)/_tab-bar/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof PagestabBarTabBarContactsImport
      parentRoute: typeof PagestabBarTabBarImport
    }
    '/_pages/(tab-bar)/_tab-bar/graph': {
      id: '/_pages/(tab-bar)/_tab-bar/graph'
      path: '/graph'
      fullPath: '/graph'
      preLoaderRoute: typeof PagestabBarTabBarGraphImport
      parentRoute: typeof PagestabBarTabBarImport
    }
  }
}

// Create and export the route tree

interface PagestabBarTabBarRouteChildren {
  PagestabBarTabBarContactsRoute: typeof PagestabBarTabBarContactsRoute
  PagestabBarTabBarGraphRoute: typeof PagestabBarTabBarGraphRoute
}

const PagestabBarTabBarRouteChildren: PagestabBarTabBarRouteChildren = {
  PagestabBarTabBarContactsRoute: PagestabBarTabBarContactsRoute,
  PagestabBarTabBarGraphRoute: PagestabBarTabBarGraphRoute,
}

const PagestabBarTabBarRouteWithChildren =
  PagestabBarTabBarRoute._addFileChildren(PagestabBarTabBarRouteChildren)

interface PagestabBarRouteChildren {
  PagestabBarTabBarRoute: typeof PagestabBarTabBarRouteWithChildren
}

const PagestabBarRouteChildren: PagestabBarRouteChildren = {
  PagestabBarTabBarRoute: PagestabBarTabBarRouteWithChildren,
}

const PagestabBarRouteWithChildren = PagestabBarRoute._addFileChildren(
  PagestabBarRouteChildren,
)

interface PagesRouteChildren {
  PagesOnboardingRoute: typeof PagesOnboardingRoute
  PagestabBarRoute: typeof PagestabBarRouteWithChildren
}

const PagesRouteChildren: PagesRouteChildren = {
  PagesOnboardingRoute: PagesOnboardingRoute,
  PagestabBarRoute: PagestabBarRouteWithChildren,
}

const PagesRouteWithChildren = PagesRoute._addFileChildren(PagesRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof PagestabBarTabBarRouteWithChildren
  '': typeof PagesRouteWithChildren
  '/onboarding': typeof PagesOnboardingRoute
  '/contacts': typeof PagestabBarTabBarContactsRoute
  '/graph': typeof PagestabBarTabBarGraphRoute
}

export interface FileRoutesByTo {
  '/': typeof PagestabBarTabBarRouteWithChildren
  '/onboarding': typeof PagesOnboardingRoute
  '/contacts': typeof PagestabBarTabBarContactsRoute
  '/graph': typeof PagestabBarTabBarGraphRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_pages': typeof PagesRouteWithChildren
  '/_pages/onboarding': typeof PagesOnboardingRoute
  '/_pages/(tab-bar)': typeof PagestabBarRouteWithChildren
  '/_pages/(tab-bar)/_tab-bar': typeof PagestabBarTabBarRouteWithChildren
  '/_pages/(tab-bar)/_tab-bar/contacts': typeof PagestabBarTabBarContactsRoute
  '/_pages/(tab-bar)/_tab-bar/graph': typeof PagestabBarTabBarGraphRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/onboarding' | '/contacts' | '/graph'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/onboarding' | '/contacts' | '/graph'
  id:
    | '__root__'
    | '/'
    | '/_pages'
    | '/_pages/onboarding'
    | '/_pages/(tab-bar)'
    | '/_pages/(tab-bar)/_tab-bar'
    | '/_pages/(tab-bar)/_tab-bar/contacts'
    | '/_pages/(tab-bar)/_tab-bar/graph'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PagesRoute: typeof PagesRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PagesRoute: PagesRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_pages"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_pages": {
      "filePath": "_pages.tsx",
      "children": [
        "/_pages/onboarding",
        "/_pages/(tab-bar)"
      ]
    },
    "/_pages/onboarding": {
      "filePath": "_pages/onboarding.tsx",
      "parent": "/_pages"
    },
    "/_pages/(tab-bar)": {
      "filePath": "_pages/(tab-bar)",
      "parent": "/_pages",
      "children": [
        "/_pages/(tab-bar)/_tab-bar"
      ]
    },
    "/_pages/(tab-bar)/_tab-bar": {
      "filePath": "_pages/(tab-bar)/_tab-bar.tsx",
      "parent": "/_pages/(tab-bar)",
      "children": [
        "/_pages/(tab-bar)/_tab-bar/contacts",
        "/_pages/(tab-bar)/_tab-bar/graph"
      ]
    },
    "/_pages/(tab-bar)/_tab-bar/contacts": {
      "filePath": "_pages/(tab-bar)/_tab-bar.contacts.tsx",
      "parent": "/_pages/(tab-bar)/_tab-bar"
    },
    "/_pages/(tab-bar)/_tab-bar/graph": {
      "filePath": "_pages/(tab-bar)/_tab-bar.graph.tsx",
      "parent": "/_pages/(tab-bar)/_tab-bar"
    }
  }
}
ROUTE_MANIFEST_END */
