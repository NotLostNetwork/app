/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProviderImport } from './routes/_provider'
import { Route as IndexImport } from './routes/index'
import { Route as ProviderOnboardingImport } from './routes/_provider/onboarding'
import { Route as ProvidertabBarTabBarImport } from './routes/_provider/(tab-bar)/_tab-bar'
import { Route as ProvidertabBarTabBarGraphImport } from './routes/_provider/(tab-bar)/_tab-bar.graph'
import { Route as ProvidertabBarTabBarContactsImport } from './routes/_provider/(tab-bar)/_tab-bar.contacts'

// Create Virtual Routes

const ProvidertabBarImport = createFileRoute('/_provider/(tab-bar)')()

// Create/Update Routes

const ProviderRoute = ProviderImport.update({
  id: '/_provider',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProvidertabBarRoute = ProvidertabBarImport.update({
  id: '/(tab-bar)',
  getParentRoute: () => ProviderRoute,
} as any)

const ProviderOnboardingRoute = ProviderOnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => ProviderRoute,
} as any)

const ProvidertabBarTabBarRoute = ProvidertabBarTabBarImport.update({
  id: '/_tab-bar',
  getParentRoute: () => ProvidertabBarRoute,
} as any)

const ProvidertabBarTabBarGraphRoute = ProvidertabBarTabBarGraphImport.update({
  id: '/graph',
  path: '/graph',
  getParentRoute: () => ProvidertabBarTabBarRoute,
} as any)

const ProvidertabBarTabBarContactsRoute =
  ProvidertabBarTabBarContactsImport.update({
    id: '/contacts',
    path: '/contacts',
    getParentRoute: () => ProvidertabBarTabBarRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_provider': {
      id: '/_provider'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProviderImport
      parentRoute: typeof rootRoute
    }
    '/_provider/onboarding': {
      id: '/_provider/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof ProviderOnboardingImport
      parentRoute: typeof ProviderImport
    }
    '/_provider/(tab-bar)': {
      id: '/_provider/(tab-bar)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProvidertabBarImport
      parentRoute: typeof ProviderImport
    }
    '/_provider/(tab-bar)/_tab-bar': {
      id: '/_provider/(tab-bar)/_tab-bar'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProvidertabBarTabBarImport
      parentRoute: typeof ProvidertabBarRoute
    }
    '/_provider/(tab-bar)/_tab-bar/contacts': {
      id: '/_provider/(tab-bar)/_tab-bar/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof ProvidertabBarTabBarContactsImport
      parentRoute: typeof ProvidertabBarTabBarImport
    }
    '/_provider/(tab-bar)/_tab-bar/graph': {
      id: '/_provider/(tab-bar)/_tab-bar/graph'
      path: '/graph'
      fullPath: '/graph'
      preLoaderRoute: typeof ProvidertabBarTabBarGraphImport
      parentRoute: typeof ProvidertabBarTabBarImport
    }
  }
}

// Create and export the route tree

interface ProvidertabBarTabBarRouteChildren {
  ProvidertabBarTabBarContactsRoute: typeof ProvidertabBarTabBarContactsRoute
  ProvidertabBarTabBarGraphRoute: typeof ProvidertabBarTabBarGraphRoute
}

const ProvidertabBarTabBarRouteChildren: ProvidertabBarTabBarRouteChildren = {
  ProvidertabBarTabBarContactsRoute: ProvidertabBarTabBarContactsRoute,
  ProvidertabBarTabBarGraphRoute: ProvidertabBarTabBarGraphRoute,
}

const ProvidertabBarTabBarRouteWithChildren =
  ProvidertabBarTabBarRoute._addFileChildren(ProvidertabBarTabBarRouteChildren)

interface ProvidertabBarRouteChildren {
  ProvidertabBarTabBarRoute: typeof ProvidertabBarTabBarRouteWithChildren
}

const ProvidertabBarRouteChildren: ProvidertabBarRouteChildren = {
  ProvidertabBarTabBarRoute: ProvidertabBarTabBarRouteWithChildren,
}

const ProvidertabBarRouteWithChildren = ProvidertabBarRoute._addFileChildren(
  ProvidertabBarRouteChildren,
)

interface ProviderRouteChildren {
  ProviderOnboardingRoute: typeof ProviderOnboardingRoute
  ProvidertabBarRoute: typeof ProvidertabBarRouteWithChildren
}

const ProviderRouteChildren: ProviderRouteChildren = {
  ProviderOnboardingRoute: ProviderOnboardingRoute,
  ProvidertabBarRoute: ProvidertabBarRouteWithChildren,
}

const ProviderRouteWithChildren = ProviderRoute._addFileChildren(
  ProviderRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof ProvidertabBarTabBarRouteWithChildren
  '': typeof ProviderRouteWithChildren
  '/onboarding': typeof ProviderOnboardingRoute
  '/contacts': typeof ProvidertabBarTabBarContactsRoute
  '/graph': typeof ProvidertabBarTabBarGraphRoute
}

export interface FileRoutesByTo {
  '/': typeof ProvidertabBarTabBarRouteWithChildren
  '/onboarding': typeof ProviderOnboardingRoute
  '/contacts': typeof ProvidertabBarTabBarContactsRoute
  '/graph': typeof ProvidertabBarTabBarGraphRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_provider': typeof ProviderRouteWithChildren
  '/_provider/onboarding': typeof ProviderOnboardingRoute
  '/_provider/(tab-bar)': typeof ProvidertabBarRouteWithChildren
  '/_provider/(tab-bar)/_tab-bar': typeof ProvidertabBarTabBarRouteWithChildren
  '/_provider/(tab-bar)/_tab-bar/contacts': typeof ProvidertabBarTabBarContactsRoute
  '/_provider/(tab-bar)/_tab-bar/graph': typeof ProvidertabBarTabBarGraphRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/onboarding' | '/contacts' | '/graph'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/onboarding' | '/contacts' | '/graph'
  id:
    | '__root__'
    | '/'
    | '/_provider'
    | '/_provider/onboarding'
    | '/_provider/(tab-bar)'
    | '/_provider/(tab-bar)/_tab-bar'
    | '/_provider/(tab-bar)/_tab-bar/contacts'
    | '/_provider/(tab-bar)/_tab-bar/graph'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProviderRoute: typeof ProviderRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProviderRoute: ProviderRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_provider"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_provider": {
      "filePath": "_provider.tsx",
      "children": [
        "/_provider/onboarding",
        "/_provider/(tab-bar)"
      ]
    },
    "/_provider/onboarding": {
      "filePath": "_provider/onboarding.tsx",
      "parent": "/_provider"
    },
    "/_provider/(tab-bar)": {
      "filePath": "_provider/(tab-bar)",
      "parent": "/_provider",
      "children": [
        "/_provider/(tab-bar)/_tab-bar"
      ]
    },
    "/_provider/(tab-bar)/_tab-bar": {
      "filePath": "_provider/(tab-bar)/_tab-bar.tsx",
      "parent": "/_provider/(tab-bar)",
      "children": [
        "/_provider/(tab-bar)/_tab-bar/contacts",
        "/_provider/(tab-bar)/_tab-bar/graph"
      ]
    },
    "/_provider/(tab-bar)/_tab-bar/contacts": {
      "filePath": "_provider/(tab-bar)/_tab-bar.contacts.tsx",
      "parent": "/_provider/(tab-bar)/_tab-bar"
    },
    "/_provider/(tab-bar)/_tab-bar/graph": {
      "filePath": "_provider/(tab-bar)/_tab-bar.graph.tsx",
      "parent": "/_provider/(tab-bar)/_tab-bar"
    }
  }
}
ROUTE_MANIFEST_END */
