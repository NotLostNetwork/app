/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as OnboardingIndexImport } from './routes/onboarding/index'
import { Route as tabBarTabBarImport } from './routes/(tab-bar)/_tab-bar'
import { Route as tabBarTabBarGraphIndexImport } from './routes/(tab-bar)/_tab-bar.graph/index'
import { Route as tabBarTabBarContactsIndexImport } from './routes/(tab-bar)/_tab-bar.contacts/index'

// Create Virtual Routes

const tabBarImport = createFileRoute('/(tab-bar)')()

// Create/Update Routes

const tabBarRoute = tabBarImport.update({
  id: '/(tab-bar)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingIndexRoute = OnboardingIndexImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRoute,
} as any)

const tabBarTabBarRoute = tabBarTabBarImport.update({
  id: '/_tab-bar',
  getParentRoute: () => tabBarRoute,
} as any)

const tabBarTabBarGraphIndexRoute = tabBarTabBarGraphIndexImport.update({
  id: '/graph/',
  path: '/graph/',
  getParentRoute: () => tabBarTabBarRoute,
} as any)

const tabBarTabBarContactsIndexRoute = tabBarTabBarContactsIndexImport.update({
  id: '/contacts/',
  path: '/contacts/',
  getParentRoute: () => tabBarTabBarRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(tab-bar)': {
      id: '/(tab-bar)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof tabBarImport
      parentRoute: typeof rootRoute
    }
    '/(tab-bar)/_tab-bar': {
      id: '/(tab-bar)/_tab-bar'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof tabBarTabBarImport
      parentRoute: typeof tabBarRoute
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexImport
      parentRoute: typeof rootRoute
    }
    '/(tab-bar)/_tab-bar/contacts/': {
      id: '/(tab-bar)/_tab-bar/contacts/'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof tabBarTabBarContactsIndexImport
      parentRoute: typeof tabBarTabBarImport
    }
    '/(tab-bar)/_tab-bar/graph/': {
      id: '/(tab-bar)/_tab-bar/graph/'
      path: '/graph'
      fullPath: '/graph'
      preLoaderRoute: typeof tabBarTabBarGraphIndexImport
      parentRoute: typeof tabBarTabBarImport
    }
  }
}

// Create and export the route tree

interface tabBarTabBarRouteChildren {
  tabBarTabBarContactsIndexRoute: typeof tabBarTabBarContactsIndexRoute
  tabBarTabBarGraphIndexRoute: typeof tabBarTabBarGraphIndexRoute
}

const tabBarTabBarRouteChildren: tabBarTabBarRouteChildren = {
  tabBarTabBarContactsIndexRoute: tabBarTabBarContactsIndexRoute,
  tabBarTabBarGraphIndexRoute: tabBarTabBarGraphIndexRoute,
}

const tabBarTabBarRouteWithChildren = tabBarTabBarRoute._addFileChildren(
  tabBarTabBarRouteChildren,
)

interface tabBarRouteChildren {
  tabBarTabBarRoute: typeof tabBarTabBarRouteWithChildren
}

const tabBarRouteChildren: tabBarRouteChildren = {
  tabBarTabBarRoute: tabBarTabBarRouteWithChildren,
}

const tabBarRouteWithChildren =
  tabBarRoute._addFileChildren(tabBarRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof tabBarTabBarRouteWithChildren
  '/onboarding': typeof OnboardingIndexRoute
  '/contacts': typeof tabBarTabBarContactsIndexRoute
  '/graph': typeof tabBarTabBarGraphIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof tabBarTabBarRouteWithChildren
  '/onboarding': typeof OnboardingIndexRoute
  '/contacts': typeof tabBarTabBarContactsIndexRoute
  '/graph': typeof tabBarTabBarGraphIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(tab-bar)': typeof tabBarRouteWithChildren
  '/(tab-bar)/_tab-bar': typeof tabBarTabBarRouteWithChildren
  '/onboarding/': typeof OnboardingIndexRoute
  '/(tab-bar)/_tab-bar/contacts/': typeof tabBarTabBarContactsIndexRoute
  '/(tab-bar)/_tab-bar/graph/': typeof tabBarTabBarGraphIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/onboarding' | '/contacts' | '/graph'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/onboarding' | '/contacts' | '/graph'
  id:
    | '__root__'
    | '/'
    | '/(tab-bar)'
    | '/(tab-bar)/_tab-bar'
    | '/onboarding/'
    | '/(tab-bar)/_tab-bar/contacts/'
    | '/(tab-bar)/_tab-bar/graph/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  tabBarRoute: typeof tabBarRouteWithChildren
  OnboardingIndexRoute: typeof OnboardingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  tabBarRoute: tabBarRouteWithChildren,
  OnboardingIndexRoute: OnboardingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(tab-bar)",
        "/onboarding/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(tab-bar)": {
      "filePath": "(tab-bar)",
      "children": [
        "/(tab-bar)/_tab-bar"
      ]
    },
    "/(tab-bar)/_tab-bar": {
      "filePath": "(tab-bar)/_tab-bar.tsx",
      "parent": "/(tab-bar)",
      "children": [
        "/(tab-bar)/_tab-bar/contacts/",
        "/(tab-bar)/_tab-bar/graph/"
      ]
    },
    "/onboarding/": {
      "filePath": "onboarding/index.tsx"
    },
    "/(tab-bar)/_tab-bar/contacts/": {
      "filePath": "(tab-bar)/_tab-bar.contacts/index.tsx",
      "parent": "/(tab-bar)/_tab-bar"
    },
    "/(tab-bar)/_tab-bar/graph/": {
      "filePath": "(tab-bar)/_tab-bar.graph/index.tsx",
      "parent": "/(tab-bar)/_tab-bar"
    }
  }
}
ROUTE_MANIFEST_END */
